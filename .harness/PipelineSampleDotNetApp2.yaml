pipeline:
  name: PipelineSampleDotNetApp2
  identifier: PipelineSampleDotNetApp2
  projectIdentifier: SampleProject
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GithubConnectorMN
        repoName: SampleDotNetApp
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: harnessnadeem
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone
                  identifier: GitClone
                  spec:
                    connectorRef: GithubConnectorMN
                    repoName: SampleDotNetApp
                    build:
                      type: branch
                      spec:
                        branch: master
    - stage:
        name: Jira Process
        identifier: Jira_Process
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Create Story
                  identifier: Create_Story
                  type: JiraCreate
                  timeout: 2m
                  spec:
                    connectorRef: HarnessJiraConnector
                    projectKey: HAR
                    issueType: Story
                    fields:
                      - name: Comment
                        value: Story Is created
                      - name: Summary
                        value: The Harness workflow created
              - step:
                  name: Jira Approval
                  identifier: Jira_Approval
                  type: JiraApproval
                  timeout: 3m
                  spec:
                    approvalCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: To Do
                    rejectionCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions: []
                    connectorRef: HarnessJiraConnector
                    projectKey: HAR
                    issueType: Story
                    issueKey: <+pipeline.stages.Jira_Process.spec.execution.steps.Create_Story.issue.key>
              - step:
                  name: Jira Update
                  identifier: Jira_Update
                  type: JiraUpdate
                  timeout: 3m
                  spec:
                    connectorRef: HarnessJiraConnector
                    issueKey: <+pipeline.stages.Jira_Process.spec.execution.steps.Create_Story.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: Done
                    fields:
                      - name: Comment
                        value: Story is completed
        tags: {}
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: Service_1
            serviceDefinition:
              spec:
                variables: []
                manifests: []
              type: Kubernetes
          infrastructure:
            environmentRef: Devlopement_environment
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: harnessnadeem
                namespace: harness-delegate-ng
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  type: K8sCanaryDeploy
                  name: deployment
                  identifier: deployment
                  spec:
                    skipDryRun: false
                    instanceSelection:
                      type: Count
                      spec:
                        count: 1
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
